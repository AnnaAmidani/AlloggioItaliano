<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: test-orm.spring.xml 56 2009-07-07 18:02:27Z michele.bianchi $ -->
<!-- Copyright (c) 2002 [company-name] -->
<!-- All rights reserved. -->
<!-- :xml.validate=true: -->
<beans
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns="http://www.springframework.org/schema/beans"
 xmlns:p="http://www.springframework.org/schema/p"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:util="http://www.springframework.org/schema/util"
 xmlns:aop="http://www.springframework.org/schema/aop"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:jee="http://www.springframework.org/schema/jee"
 xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
  http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
  ">

 <!-- ================================================================ -->
 <!--   config                                                         -->
 <!-- ================================================================ -->
 <!-- Instruct Spring to perform declarative transaction management automatically on annotated classes. -->
 <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

 <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

 <!--
  PostProcessors to perform exception translation on @Repository classes (from native
  exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).
 <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
 -->

 <!-- ================================================================ -->
 <!--   Transaction manager                                            -->
 <!-- ================================================================ -->
 <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
 <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" p:entityManagerFactory-ref="entityManagerFactory">
  <property name="entityManagerFactory" ref="entityManagerFactory"/>
 </bean>

 <!-- ================================================================ -->
 <!--    datasource                                                    -->
 <!-- ================================================================ -->
 <!--
   org.springframework.jdbc.datasource.DriverManagerDataSource is a local DataSource that works in any environment.
   Note that DriverManagerDataSource does not pool connections and is therefore not intended for production.

   See the Image Database sample application for an example of using C3P0 ComboPooledDataSource as an alternative.
 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
       />
 -->

 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
       p:driverClassName="org.hsqldb.jdbcDriver"
       p:url="jdbc:hsqldb:mem:test-alit"
       p:username="sa"
       p:password=""
       />

 <!-- ================================================================ -->
 <!--   entityManagerFactory                                           -->
 <!-- ================================================================ -->
 <!-- entityManagerFactory: full-featured in spring app, no jndi -->
 <bean id="entityManagerFactory"
       class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
       p:dataSource-ref="dataSource"
       p:persistenceXmlLocation="anna/alit/orm/test-persistence.xml"
       p:persistenceUnitName="test-alit"
       >
  <!-- p:persistenceUnitName="test-aaa" -->
  <!-- hibernate does not need it
  <property name="loadTimeWeaver">
    <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
  </property>
  -->
  <!--
  <property name="jpaVendorAdapter">
   <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:database="${jpa.database}" p:showSql="${jpa.showSql}"/>
   <bean class="org.springframework.orm.jpa.vendor.TopLinkJpaVendorAdapter" p:databasePlatform="${jpa.databasePlatform}" p:showSql="${jpa.showSql}"/>
   <bean class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter" p:database="${jpa.database}" p:showSql="${jpa.showSql}"/>
  </property>
  -->
 </bean>

</beans>
